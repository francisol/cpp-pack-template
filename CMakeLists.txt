cmake_minimum_required(VERSION 3.10)
project({{project-name}})
set(APP_NAME "{{project-name}}")
set(CMAKE_CXX_STANDARD 11)
set(RS_LIB "{{project-name}}_rs")
message(${CMAKE_SYSTEM_NAME})
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(CARGO_CMD cargo build --lib --target-dir ${CMAKE_SYSTEM_NAME}  )
    set(TARGET_DIR "debug")
else ()
    set(CARGO_CMD cargo build --lib --release  --target-dir ${CMAKE_SYSTEM_NAME}  )
    set(TARGET_DIR "release")
endif ()
set(RS_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_SYSTEM_NAME}/${TARGET_DIR})
link_directories(${RS_LIB_DIR})
message(STATUS "${RS_LIB} in ${RS_LIB_DIR}}")
add_executable(${APP_NAME} main.cpp)
if (WIN32)
    # target_link_libraries(carton  wsock32 bcrypt ws2_32 NtDll userenv)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -static  -Wl,-gc-section")
    # target_link_libraries(carton  dl m pthread)
endif ()

add_custom_target(rs_lib
        COMMAND ${CARGO_CMD}
        )
add_dependencies(${APP_NAME} rs_lib)
target_link_libraries(${APP_NAME}  ${RS_LIB})
